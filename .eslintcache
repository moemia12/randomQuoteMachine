[{"C:\\Users\\Mohsin\\Desktop\\randomQuoteMachine\\src\\index.js":"1","C:\\Users\\Mohsin\\Desktop\\randomQuoteMachine\\src\\reportWebVitals.js":"2","C:\\Users\\Mohsin\\Desktop\\randomQuoteMachine\\src\\App.js":"3","C:\\Users\\Mohsin\\Desktop\\randomQuoteMachine\\src\\components\\QuoteMachine.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":3514,"mtime":1612473544009,"results":"8","hashOfConfig":"6"},{"size":1770,"mtime":1612480763254,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"q8oc5a",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mohsin\\Desktop\\randomQuoteMachine\\src\\index.js",[],["20","21"],"C:\\Users\\Mohsin\\Desktop\\randomQuoteMachine\\src\\reportWebVitals.js",[],"C:\\Users\\Mohsin\\Desktop\\randomQuoteMachine\\src\\App.js",["22","23","24","25","26"],"import { random } from 'lodash';\nimport 'typeface-roboto';\nimport React, { Component } from 'react';\nimport QuoteMachine from './components/QuoteMachine';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles'\n\n\n\nconst styles = {\n  container: {\n    display: 'flex',\n    height: '100vh',\n    alignItems: 'center',\n  }\n}\n\n\n// Global App class for the Random Quote Machine - Setting current states for \"quotes\" & \"selectedQuoteIndex\"\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n      selectedQuoteIndex: null,\n      background: 'green'\n    }\n\n    //Binding methods\n    this.assignNewQuoteIndex = this.assignNewQuoteIndex.bind(this);\n    this.generateNewQuoteIndex = this.generateNewQuoteIndex.bind(this);\n    this.changeBackground = this.changeBackground.bind(this);\n    this.backgroundQuoteChange = this.backgroundQuoteChange.bind(this);\n    \n  }\n\n  // Extracting Random quotes Data from gist via GitHub\n  componentDidMount() {\n    fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\n      .then(data => data.json())\n      .then(quotes => this.setState({ quotes }, this.assignNewQuoteIndex));\n  }\n\n  //Function that gets the random selected quote\n  get selectedQuote() {\n    if (!this.state.quotes.length || !Number.isInteger(this.state.selectedQuoteIndex))            {{/*Checking to see if the quotes has a length OR whether the index exists */ }\n      return undefined; {/*Return undefined if not*/ }\n    }\n    return this.state.quotes[this.state.selectedQuoteIndex];                                      {/*Else return the selected quote */ }\n  }\n\n  //Method to generate the quote index by returning an interger from state.quotes (Using Lodash for the Random func)\n  generateNewQuoteIndex() {\n    if (!this.state.quotes.length) {\n      return undefined;\n    }\n    return random(0, this.state.quotes.length)\n  }\n\n  // Method to assign the index quote to the Button component below\n  assignNewQuoteIndex() {\n    this.setState({ selectedQuoteIndex: this.generateNewQuoteIndex() });\n  \n  }\n\n  //Function to change color on click\n  changeBackground() {\n      let background = \"#\" + ((1<<24)*Math.random() | 0).toString(16);\n      this.setState({background});\n  }\n  \n  //Helper function to change quote & background color onClick\n  backgroundQuoteChange(){\n    this.assignNewQuoteIndex();\n    this.changeBackground();\n  }\n\n  render() {\n    return (\n      <div id='main-container' style={{\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: this.state.background,\n        transition: 'ease-in-out 0.5s'\n      }}>\n      <div id='page-title' style={{\n        padding:'1rem',\n        width: '50rem',\n        fontSize: 50,\n        position: 'relative',\n        left: '34rem',\n        top: '5rem',\n        marginBottom: '-10rem',\n        background: 'linear-gradient(0deg, rgba(255,255,255,1) 0%, rgba(255,255,255,0.5) 100%)',\n        textAlign: 'center',\n\n      }}>Random Quote Machine</div>\n      <Grid className={this.props.classes.container} id=\"quote-box\" justify='center' container>\n        <Grid xs={9} lg={6} item>\n         { \n          this.selectedQuote ? \n         <QuoteMachine selectedQuote={this.selectedQuote} backgroundQuoteChange={this.backgroundQuoteChange}/>\n          : null\n        }\n        </Grid>\n      </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n\n","C:\\Users\\Mohsin\\Desktop\\randomQuoteMachine\\src\\components\\QuoteMachine.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":46,"column":100,"nodeType":"33","messageId":"34","endLine":46,"endColumn":178},{"ruleId":"31","severity":1,"message":"32","line":47,"column":25,"nodeType":"33","messageId":"34","endLine":47,"endColumn":55},{"ruleId":"35","severity":1,"message":"36","line":47,"column":25,"nodeType":"33","messageId":"37","endLine":47,"endColumn":55},{"ruleId":"31","severity":1,"message":"32","line":49,"column":99,"nodeType":"33","messageId":"34","endLine":49,"endColumn":137},{"ruleId":"35","severity":1,"message":"36","line":49,"column":99,"nodeType":"33","messageId":"37","endLine":49,"endColumn":137},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","no-global-assign","no-unsafe-negation"]